{"version":3,"sources":["component/tasks/style.module.css","component/addTask/style.module.css","App.module.css","component/deleteAllTasksBtn/style.module.css","component/taskOptionsBtn/style.module.css","component/addTask/index.js","api/api.js","redux/todoList/types.js","redux/todoList/actions.js","component/addTask/container.js","component/tasks/tasks.js","component/tasks/container.js","component/taskOptionsBtn/index.js","component/taskOptionsBtn/container.js","component/deleteAllTasksBtn/index.js","component/deleteAllTasksBtn/container.js","redux/todoList/index.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AddTask","props","className","style","wrapper","input","value","onChange","handleChange","placeholder","button","onClick","addTask","type","errProcessing","res","Promise","resolve","reject","status","GET_ALL_TASKS","ADD_TASK","DELETE_TASK","CHANGE_STATE","DONE_TASK_FILTER","NOT_DONE_TASK_FILTER","ALL_TASK_FILTER","DELETE_ALL_TASKS","addTaskThunk","message","todo","dispatch","task","fetch","method","headers","body","JSON","stringify","isDone","then","addTaskAC","catch","err","alert","allTaskThunk","json","data","console","log","changeStateTaskThunk","id","changeStateApi","changeState","deleteTaskThunk","deleteTaskApi","deleteTask","deleteAllTasksThunk","connect","state","tasks","useState","setValue","e","target","Tasks","filterTask","changeStateTask","length","noneTasks","map","doneTask","_id","CloseCircleOutlined","btn","filter","filterStatus","useEffect","TaskOptions","allTaskFilter","doneTaskFilter","notDoneTaskFilter","activeBtn","size","activeBtnStyle","doneTaskFilterAC","notDoneTaskFilterAC","allTaskFilterAC","DeleteAll","deleteAll","block","shape","deleteAllTasks","initialState","changeText","todoListReducer","action","item","store","createStore","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3da80be5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__3Ny3x\",\"task\":\"style_task__3VB-W\",\"doneTask\":\"style_doneTask__3BuDd\",\"noneTasks\":\"style_noneTasks__1ne8m\",\"btn\":\"style_btn__19CAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__983UC\",\"button\":\"style_button__3eCZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTask\":\"App_addTask__20SFj\",\"tasks\":\"App_tasks__34r5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__3-Afa\",\"btn\":\"style_btn__3DOGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__1lR4A\"};","import style from './style.module.css';\nimport { Input, Button } from 'antd';\n\nconst AddTask = (props) => {\n  return (\n    <div className={style.wrapper}>\n      <Input\n        className={style.input}\n        value={props.value}\n        onChange={props.handleChange}\n        placeholder=\"Введите задачу...\"\n      />\n      <Button className={style.button} onClick={props.addTask} type=\"primary\">\n        Добавить\n      </Button>\n    </div>\n  );\n};\n\nexport default AddTask;\n","const errProcessing = () => {\n  return (res) =>\n    new Promise((resolve, reject) => {\n      if (res.status >= 200 && res.status < 400) {\n        return resolve(res);\n      }\n      return reject(res);\n    });\n};\n\nexport const getAllTasks = () => {\n  return fetch('/tasks').then((res) => res.json());\n};\n\nexport const createTaskApi = (task) => {\n  return fetch('/', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify({ todo: task, isDone: false }),\n  }).then(errProcessing());\n};\n\nexport const deleteTaskApi = (id) => {\n  return fetch(`/delete/${id}`, {\n    method: 'DELETE',\n  }).then(errProcessing());\n};\n\nexport const deleteAllTaskApi = () => {\n  return fetch('/delete-all', {\n    method: 'DELETE',\n  }).then(errProcessing());\n};\n\nexport const changeStateApi = (id) => {\n  return fetch(`/update-status/${id}`, {\n    method: 'PUT',\n  }).then(errProcessing());\n};\n","export const GET_ALL_TASKS = 'GET_ALL_TASKS';\nexport const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const DONE_TASK_FILTER = 'DONE_TASK_FILTER';\nexport const NOT_DONE_TASK_FILTER = 'NOT_DONE_TASK_FILTER';\nexport const ALL_TASK_FILTER = 'ALL_TASK_FILTER';\nexport const DELETE_ALL_TASKS = 'DELETE_ALL_TASKS';\n","import {\n  createTaskApi,\n  getAllTasks,\n  changeStateApi,\n  deleteTaskApi,\n  deleteAllTaskApi,\n} from '../../api/api';\nimport {\n  GET_ALL_TASKS,\n  ADD_TASK,\n  DELETE_TASK,\n  CHANGE_STATE,\n  DONE_TASK_FILTER,\n  NOT_DONE_TASK_FILTER,\n  ALL_TASK_FILTER,\n  DELETE_ALL_TASKS,\n} from './types';\n\nexport const getAllTasksAC = (todo) => ({ type: GET_ALL_TASKS, todo });\nexport const addTaskAC = (message) => ({ type: ADD_TASK, message });\nexport const deleteTask = (id) => ({ type: DELETE_TASK, id });\nexport const changeState = (id) => ({ type: CHANGE_STATE, id });\nexport const doneTaskFilter = () => ({ type: DONE_TASK_FILTER });\nexport const notDoneTaskFilter = () => ({ type: NOT_DONE_TASK_FILTER });\nexport const allTaskFilter = () => ({ type: ALL_TASK_FILTER });\nexport const deleteAllTasks = () => ({ type: DELETE_ALL_TASKS });\n\nexport const addTaskThunk = (message, todo) => (dispatch) => {\n  return createTaskApi(message)\n    .then(() => {\n      return dispatch(addTaskAC(message));\n    })\n    .catch((err) => {\n      return alert(`Произошла ошибка: ${err}`);\n    });\n};\n\nexport const allTaskThunk = () => (dispatch) => {\n  return getAllTasks()\n    .then((data) => {\n      return dispatch(getAllTasksAC(data));\n    })\n    .catch((err) => {\n      return console.log(`Произошла ошибка: ${err}`);\n    });\n};\n\nexport const changeStateTaskThunk = (id) => (dispatch) => {\n  return changeStateApi(id)\n    .then(() => {\n      return dispatch(changeState(id));\n    })\n    .catch((err) => {\n      return console.log(`Произошла ошибка: ${err}`);\n    });\n};\n\nexport const deleteTaskThunk = (id) => (dispatch) => {\n  return deleteTaskApi(id)\n    .then(() => {\n      return dispatch(deleteTask(id));\n    })\n    .catch((err) => {\n      return console.log(`Произошла ошибка: ${err}`);\n    });\n};\n\nexport const deleteAllTasksThunk = () => (dispatch) => {\n  return deleteAllTaskApi()\n    .then(() => {\n      return dispatch(deleteAllTasks());\n    })\n    .catch((err) => {\n      return console.log(`Произошла ошибка: ${err}`);\n    });\n};\n","import AddTask from './index';\nimport { connect } from 'react-redux';\nimport { addTaskThunk } from '../../redux/todoList/actions';\nimport { useState } from 'react';\n\nconst AddTaskContainer = (props) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const addTask = () => {\n    if (value) {\n      props.addTaskThunk(value);\n      return setValue('');\n    }\n  };\n\n  return (\n    <AddTask value={value} handleChange={handleChange} addTask={addTask} />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTaskThunk: (message) => {\n      dispatch(addTaskThunk(message));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskContainer);\n","import style from './style.module.css';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nconst Tasks = ({ filterTask, changeStateTask, deleteTask }) => {\n  return filterTask().length === 0 ? (\n    <div className={style.noneTasks}>\n      <h2>Задач нет</h2>\n    </div>\n  ) : (\n    filterTask().map((todo) => {\n      return (\n        <div key={todo._id} className={style.wrapper}>\n          <p\n            className={todo.isDone ? style.doneTask : style.task}\n            onClick={() => changeStateTask(todo._id)}\n          >\n            {todo.todo}\n          </p>\n          <CloseCircleOutlined\n            className={style.btn}\n            onClick={() => deleteTask(todo._id)}\n          />\n        </div>\n      );\n    })\n  );\n};\n\nexport default Tasks;\n","import Tasks from './tasks';\nimport { connect } from 'react-redux';\nimport {\n  deleteTaskThunk,\n  allTaskThunk,\n  changeStateTaskThunk,\n} from '../../redux/todoList/actions';\nimport { useEffect } from 'react';\n\nconst TasksContainer = ({\n  deleteTask,\n  filterStatus,\n  filter,\n  tasks,\n  allTaskThunk,\n  changeStateTaskThunk,\n}) => {\n  useEffect(() => {\n    allTaskThunk();\n  }, []);\n\n  const deleteTaskId = (id) => {\n    return deleteTask(id);\n  };\n\n  const changeStateTask = (id) => {\n    return changeStateTaskThunk(id);\n  };\n\n  const filterTask = () => {\n    if (filterStatus) {\n      return filter;\n    }\n    return tasks;\n  };\n\n  return (\n    <Tasks\n      tasks={tasks}\n      deleteTask={deleteTaskId}\n      changeStateTask={changeStateTask}\n      filterTask={filterTask}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks,\n    filter: state.filter,\n    filterStatus: state.filterStatus,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteTask: (id) => {\n      dispatch(deleteTaskThunk(id));\n    },\n    changeStateTaskThunk: (id) => {\n      dispatch(changeStateTaskThunk(id));\n    },\n    allTaskThunk: () => {\n      dispatch(allTaskThunk());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksContainer);\n","import style from './style.module.css';\nimport { Button } from 'antd';\n\nconst TaskOptions = ({\n  allTaskFilter,\n  doneTaskFilter,\n  notDoneTaskFilter,\n  activeBtn,\n}) => {\n  return (\n    <div className={style.wrapper}>\n      <Button\n        onClick={allTaskFilter}\n        type={activeBtn === 'all' ? 'success' : 'primary'}\n        size=\"small\"\n      >\n        Все задачи\n      </Button>\n      <Button\n        onClick={doneTaskFilter}\n        type={activeBtn === 'done' ? 'success' : 'primary'}\n        size=\"small\"\n      >\n        {' '}\n        Выполненые\n      </Button>\n      <Button\n        onClick={notDoneTaskFilter}\n        type={activeBtn === 'notDone' ? 'success' : 'primary'}\n        size=\"small\"\n      >\n        Не выполненые\n      </Button>\n    </div>\n  );\n};\n\nexport default TaskOptions;\n","import { connect } from 'react-redux';\nimport {\n  allTaskFilter,\n  doneTaskFilter,\n  notDoneTaskFilter,\n} from '../../redux/todoList/actions';\nimport TaskOptions from './index';\n\nconst TaskOptionsContainer = ({\n  doneTaskFilterAC,\n  notDoneTaskFilterAC,\n  allTaskFilterAC,\n  activeBtn,\n}) => {\n  return (\n    <TaskOptions\n      doneTaskFilter={doneTaskFilterAC}\n      notDoneTaskFilter={notDoneTaskFilterAC}\n      allTaskFilter={allTaskFilterAC}\n      activeBtn={activeBtn}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    activeBtn: state.activeBtnStyle,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    doneTaskFilterAC: () => {\n      dispatch(doneTaskFilter());\n    },\n    notDoneTaskFilterAC: () => {\n      dispatch(notDoneTaskFilter());\n    },\n    allTaskFilterAC: () => {\n      dispatch(allTaskFilter());\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TaskOptionsContainer);\n","import style from './style.module.css';\nimport { Button } from 'antd';\n\nconst DeleteAll = ({ deleteAll }) => {\n  return (\n    <div className={style.wrapper}>\n      <Button\n        className={style.btn}\n        onClick={deleteAll}\n        block={true}\n        shape=\"round\"\n      >\n        Удалить все задачи\n      </Button>\n    </div>\n  );\n};\n\nexport default DeleteAll;\n","import { connect } from 'react-redux';\nimport { deleteAllTasksThunk } from '../../redux/todoList/actions';\nimport DeleteAll from './index';\n\nconst DeleteAllContainer = ({ deleteAllTasks }) => {\n  return <DeleteAll deleteAll={deleteAllTasks} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteAllTasks: () => {\n      dispatch(deleteAllTasksThunk());\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(DeleteAllContainer);\n","import {\n  GET_ALL_TASKS,\n  ADD_TASK,\n  DELETE_TASK,\n  CHANGE_STATE,\n  DONE_TASK_FILTER,\n  NOT_DONE_TASK_FILTER,\n  ALL_TASK_FILTER,\n  DELETE_ALL_TASKS,\n} from './types';\n\nconst initialState = {\n  changeText: '',\n  tasks: [],\n  filter: [],\n  filterStatus: false,\n  activeBtnStyle: '',\n};\n\nconst todoListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_TASKS:\n      return {\n        ...state,\n        tasks: action.todo,\n      };\n\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [\n          ...state.tasks,\n          { _id: action._id, todo: action.message, isDone: false },\n        ],\n      };\n\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks.filter((item) => item._id !== action.id)],\n      };\n\n    case CHANGE_STATE:\n      return {\n        ...state,\n        tasks: state.tasks.map((item) => {\n          if (item._id === action.id) {\n            return {\n              ...item,\n              isDone: !item.isDone,\n            };\n          }\n          return item;\n        }),\n      };\n\n    case DONE_TASK_FILTER:\n      return {\n        ...state,\n        filter: state.tasks.filter((item) => item.isDone === true),\n        filterStatus: true,\n        activeBtnStyle: 'done',\n      };\n\n    case NOT_DONE_TASK_FILTER:\n      return {\n        ...state,\n        filter: state.tasks.filter((item) => item.isDone === false),\n        filterStatus: true,\n        activeBtnStyle: 'notDone',\n      };\n\n    case ALL_TASK_FILTER:\n      return {\n        ...state,\n        filterStatus: false,\n        activeBtnStyle: 'all',\n      };\n\n    case DELETE_ALL_TASKS:\n      return {\n        ...state,\n        tasks: [],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todoListReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport todoListReducer from './todoList/index';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(todoListReducer, applyMiddleware(thunk));\n\nexport default store;\n","import style from './App.module.css';\nimport AddTaskContainer from './component/addTask/container';\nimport TasksContainer from './component/tasks/container';\nimport TaskOptionsContainer from './component/taskOptionsBtn/container';\nimport DeleteAllContainer from './component/deleteAllTasksBtn/container';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        <div className={style.addTask}>\n          <AddTaskContainer />\n        </div>\n        <div className={style.tasks}>\n          <TasksContainer />\n          <TaskOptionsContainer />\n          <DeleteAllContainer />\n        </div>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}